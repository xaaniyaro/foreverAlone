Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> programa
Rule 1     empty -> <empty>
Rule 2     programa -> PROGRAMA ID SEMICOLON addMain vars createTable func_declarations main showstacks
Rule 3     addMain -> empty
Rule 4     createTable -> empty
Rule 5     vars -> VAR var2
Rule 6     var1 -> tipo lista_ids SEMICOLON
Rule 7     var2 -> var1 var2
Rule 8     var2 -> var1
Rule 9     var_decl -> ID
Rule 10    var_decl -> ID LBRACKET CTEI RBRACKET
Rule 11    var_decl -> ID LBRACKET exp RBRACKET
Rule 12    lista_ids -> lista_ids COMMA var_decl
Rule 13    lista_ids -> var_decl
Rule 14    tipo -> INT
Rule 15    tipo -> FLOAT
Rule 16    tipo -> CHAR
Rule 17    func_declarations -> func_decl funcBody func_declarations
Rule 18    func_declarations -> empty
Rule 19    func_decl -> FUNCION func2 func3 LPAREN params RPAREN vars
Rule 20    func_decl -> FUNCION func2 func3 LPAREN RPAREN vars
Rule 21    func_decl -> FUNCION func2 func3 LPAREN params RPAREN
Rule 22    func_decl -> FUNCION func2 func3 LPAREN RPAREN
Rule 23    funcBody -> bloque endFunc
Rule 24    func3 -> ID
Rule 25    func2 -> tipo
Rule 26    func2 -> VOID
Rule 27    endFunc -> empty
Rule 28    bloque -> LCURLY bloque1 RCURLY
Rule 29    bloque1 -> estatuto bloque1
Rule 30    bloque1 -> empty
Rule 31    estatuto -> asig
Rule 32    estatuto -> cond
Rule 33    estatuto -> retorno
Rule 34    estatuto -> lectura
Rule 35    estatuto -> escritura
Rule 36    estatuto -> llamada SEMICOLON
Rule 37    estatuto -> repeticion
Rule 38    asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON
Rule 39    addVar -> <empty>
Rule 40    addAsig -> <empty>
Rule 41    genAsig -> <empty>
Rule 42    main -> printfuncs PRINCIPAL LPAREN RPAREN fillFirst bloque mergetables
Rule 43    fillFirst -> empty
Rule 44    param_decl -> tipo ID
Rule 45    params -> params COMMA param_decl
Rule 46    params -> param_decl
Rule 47    retorno -> REGRESA LPAREN exp RPAREN SEMICOLON
Rule 48    llamada -> iniciaLlamada llamada2 endLlamada RPAREN
Rule 49    llamada -> iniciaLlamada endLlamada RPAREN
Rule 50    iniciaLlamada -> ID LPAREN
Rule 51    llamada2 -> exp COMMA llamada2
Rule 52    llamada2 -> exp
Rule 53    endLlamada -> <empty>
Rule 54    lectura -> LEE LPAREN variable RPAREN SEMICOLON
Rule 55    escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON
Rule 56    escritura1 -> CTES
Rule 57    escritura1 -> exp
Rule 58    escritura2 -> escritura1 addescritura COMMA escritura2
Rule 59    escritura2 -> escritura1 addescritura
Rule 60    addescritura -> <empty>
Rule 61    cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2
Rule 62    cond1 -> empty
Rule 63    cond2 -> empty
Rule 64    elsePart -> SINO elseActions bloque
Rule 65    elsePart -> empty
Rule 66    elseActions -> empty
Rule 67    repeticion -> condicional
Rule 68    repeticion -> nocondicional
Rule 69    condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile
Rule 70    regWhile -> empty
Rule 71    whileCond -> empty
Rule 72    endWhile -> empty
Rule 73    nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor
Rule 74    createFor -> <empty>
Rule 75    endFor -> <empty>
Rule 76    exp -> texp exp1
Rule 77    exp1 -> OR texp exp1
Rule 78    exp1 -> empty
Rule 79    texp -> gexp texp1
Rule 80    texp1 -> AND gexp texp1
Rule 81    texp1 -> empty
Rule 82    gexp -> mexp gexp1
Rule 83    gexp1 -> gexp2 mexp gexp1
Rule 84    gexp1 -> empty
Rule 85    gexp2 -> LESS
Rule 86    gexp2 -> LESSO
Rule 87    gexp2 -> GREATER
Rule 88    gexp2 -> GREATERO
Rule 89    gexp2 -> NOTEQUAL
Rule 90    gexp2 -> EQUALS
Rule 91    mexp -> termino mexp1
Rule 92    mexp1 -> mexp2 termino mexp1
Rule 93    mexp1 -> empty
Rule 94    mexp2 -> PLUS
Rule 95    mexp2 -> MINUS
Rule 96    termino -> factor termino1
Rule 97    termino1 -> TIMES factor termino1
Rule 98    termino1 -> DIVIDE factor termino1
Rule 99    termino1 -> empty
Rule 100   factor -> LPAREN exp RPAREN
Rule 101   factor -> varcte
Rule 102   factor -> variable
Rule 103   factor -> llamada
Rule 104   variable -> ID
Rule 105   varcte -> CTEI
Rule 106   varcte -> CTEF
Rule 107   varcte -> CTEC
Rule 108   mergetables -> empty
Rule 109   showstacks -> empty
Rule 110   printfuncs -> empty

Terminals, with rules where they appear

AND                  : 80
CHAR                 : 16
COMMA                : 12 45 51 58
CTEC                 : 107
CTEF                 : 106
CTEI                 : 10 73 73 105
CTES                 : 56
DESDE                : 73
DIVIDE               : 98
ENTONCES             : 61
EQUAL                : 38 73
EQUALS               : 90
ESCRIBE              : 55
FLOAT                : 15
FUNCION              : 19 20 21 22
GREATER              : 87
GREATERO             : 88
HACER                : 73
HASTA                : 73
HAZ                  : 69
ID                   : 2 9 10 11 24 44 50 73 104
INT                  : 14
LBRACKET             : 10 11
LCURLY               : 28
LEE                  : 54
LESS                 : 85
LESSO                : 86
LPAREN               : 19 20 21 22 42 47 50 54 55 61 69 100
MIENTRAS             : 69
MINUS                : 95
NOTEQUAL             : 89
OR                   : 77
PLUS                 : 94
PRINCIPAL            : 42
PROGRAMA             : 2
RBRACKET             : 10 11
RCURLY               : 28
REGRESA              : 47
RPAREN               : 19 20 21 22 42 47 48 49 54 55 61 69 100
SEMICOLON            : 2 6 36 38 47 54 55
SI                   : 61
SINO                 : 64
TIMES                : 97
VAR                  : 5
VOID                 : 26
error                : 

Nonterminals, with rules where they appear

addAsig              : 38
addMain              : 2
addVar               : 38
addescritura         : 58 59
asig                 : 31
bloque               : 23 42 61 64 69 73
bloque1              : 28 29
cond                 : 32
cond1                : 61
cond2                : 61
condicional          : 67
createFor            : 73
createTable          : 2
elseActions          : 64
elsePart             : 61
empty                : 3 4 18 27 30 43 62 63 65 66 70 71 72 78 81 84 93 99 108 109 110
endFor               : 73
endFunc              : 23
endLlamada           : 48 49
endWhile             : 69
escritura            : 35
escritura1           : 58 59
escritura2           : 55 58
estatuto             : 29
exp                  : 11 38 47 51 52 57 61 69 100
exp1                 : 76 77
factor               : 96 97 98
fillFirst            : 42
func2                : 19 20 21 22
func3                : 19 20 21 22
funcBody             : 17
func_decl            : 17
func_declarations    : 2 17
genAsig              : 38
gexp                 : 79 80
gexp1                : 82 83
gexp2                : 83
iniciaLlamada        : 48 49
lectura              : 34
lista_ids            : 6 12
llamada              : 36 103
llamada2             : 48 51
main                 : 2
mergetables          : 42
mexp                 : 82 83
mexp1                : 91 92
mexp2                : 92
nocondicional        : 68
param_decl           : 45 46
params               : 19 21 45
printfuncs           : 42
programa             : 0
regWhile             : 69
repeticion           : 37
retorno              : 33
showstacks           : 2
termino              : 91 92
termino1             : 96 97 98
texp                 : 76 77
texp1                : 79 80
tipo                 : 6 25 44
var1                 : 7 8
var2                 : 5 7
var_decl             : 12 13
varcte               : 101
variable             : 38 54 102
vars                 : 2 19 20
whileCond            : 69

Parsing method: LALR

state 0

    (0) S' -> . programa
    (2) programa -> . PROGRAMA ID SEMICOLON addMain vars createTable func_declarations main showstacks

    PROGRAMA        shift and go to state 2

    programa                       shift and go to state 1

state 1

    (0) S' -> programa .



state 2

    (2) programa -> PROGRAMA . ID SEMICOLON addMain vars createTable func_declarations main showstacks

    ID              shift and go to state 3


state 3

    (2) programa -> PROGRAMA ID . SEMICOLON addMain vars createTable func_declarations main showstacks

    SEMICOLON       shift and go to state 4


state 4

    (2) programa -> PROGRAMA ID SEMICOLON . addMain vars createTable func_declarations main showstacks
    (3) addMain -> . empty
    (1) empty -> .

    VAR             reduce using rule 1 (empty -> .)

    addMain                        shift and go to state 5
    empty                          shift and go to state 6

state 5

    (2) programa -> PROGRAMA ID SEMICOLON addMain . vars createTable func_declarations main showstacks
    (5) vars -> . VAR var2

    VAR             shift and go to state 8

    vars                           shift and go to state 7

state 6

    (3) addMain -> empty .

    VAR             reduce using rule 3 (addMain -> empty .)


state 7

    (2) programa -> PROGRAMA ID SEMICOLON addMain vars . createTable func_declarations main showstacks
    (4) createTable -> . empty
    (1) empty -> .

    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)

    createTable                    shift and go to state 9
    empty                          shift and go to state 10

state 8

    (5) vars -> VAR . var2
    (7) var2 -> . var1 var2
    (8) var2 -> . var1
    (6) var1 -> . tipo lista_ids SEMICOLON
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    var2                           shift and go to state 11
    var1                           shift and go to state 12
    tipo                           shift and go to state 13

state 9

    (2) programa -> PROGRAMA ID SEMICOLON addMain vars createTable . func_declarations main showstacks
    (17) func_declarations -> . func_decl funcBody func_declarations
    (18) func_declarations -> . empty
    (19) func_decl -> . FUNCION func2 func3 LPAREN params RPAREN vars
    (20) func_decl -> . FUNCION func2 func3 LPAREN RPAREN vars
    (21) func_decl -> . FUNCION func2 func3 LPAREN params RPAREN
    (22) func_decl -> . FUNCION func2 func3 LPAREN RPAREN
    (1) empty -> .

    FUNCION         shift and go to state 20
    PRINCIPAL       reduce using rule 1 (empty -> .)

    func_declarations              shift and go to state 17
    func_decl                      shift and go to state 18
    empty                          shift and go to state 19

state 10

    (4) createTable -> empty .

    FUNCION         reduce using rule 4 (createTable -> empty .)
    PRINCIPAL       reduce using rule 4 (createTable -> empty .)


state 11

    (5) vars -> VAR var2 .

    FUNCION         reduce using rule 5 (vars -> VAR var2 .)
    PRINCIPAL       reduce using rule 5 (vars -> VAR var2 .)
    LCURLY          reduce using rule 5 (vars -> VAR var2 .)


state 12

    (7) var2 -> var1 . var2
    (8) var2 -> var1 .
    (7) var2 -> . var1 var2
    (8) var2 -> . var1
    (6) var1 -> . tipo lista_ids SEMICOLON
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR

    FUNCION         reduce using rule 8 (var2 -> var1 .)
    PRINCIPAL       reduce using rule 8 (var2 -> var1 .)
    LCURLY          reduce using rule 8 (var2 -> var1 .)
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    var1                           shift and go to state 12
    var2                           shift and go to state 21
    tipo                           shift and go to state 13

state 13

    (6) var1 -> tipo . lista_ids SEMICOLON
    (12) lista_ids -> . lista_ids COMMA var_decl
    (13) lista_ids -> . var_decl
    (9) var_decl -> . ID
    (10) var_decl -> . ID LBRACKET CTEI RBRACKET
    (11) var_decl -> . ID LBRACKET exp RBRACKET

    ID              shift and go to state 24

    lista_ids                      shift and go to state 22
    var_decl                       shift and go to state 23

state 14

    (14) tipo -> INT .

    ID              reduce using rule 14 (tipo -> INT .)


state 15

    (15) tipo -> FLOAT .

    ID              reduce using rule 15 (tipo -> FLOAT .)


state 16

    (16) tipo -> CHAR .

    ID              reduce using rule 16 (tipo -> CHAR .)


state 17

    (2) programa -> PROGRAMA ID SEMICOLON addMain vars createTable func_declarations . main showstacks
    (42) main -> . printfuncs PRINCIPAL LPAREN RPAREN fillFirst bloque mergetables
    (110) printfuncs -> . empty
    (1) empty -> .

    PRINCIPAL       reduce using rule 1 (empty -> .)

    main                           shift and go to state 25
    printfuncs                     shift and go to state 26
    empty                          shift and go to state 27

state 18

    (17) func_declarations -> func_decl . funcBody func_declarations
    (23) funcBody -> . bloque endFunc
    (28) bloque -> . LCURLY bloque1 RCURLY

    LCURLY          shift and go to state 30

    funcBody                       shift and go to state 28
    bloque                         shift and go to state 29

state 19

    (18) func_declarations -> empty .

    PRINCIPAL       reduce using rule 18 (func_declarations -> empty .)


state 20

    (19) func_decl -> FUNCION . func2 func3 LPAREN params RPAREN vars
    (20) func_decl -> FUNCION . func2 func3 LPAREN RPAREN vars
    (21) func_decl -> FUNCION . func2 func3 LPAREN params RPAREN
    (22) func_decl -> FUNCION . func2 func3 LPAREN RPAREN
    (25) func2 -> . tipo
    (26) func2 -> . VOID
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR

    VOID            shift and go to state 33
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    func2                          shift and go to state 31
    tipo                           shift and go to state 32

state 21

    (7) var2 -> var1 var2 .

    FUNCION         reduce using rule 7 (var2 -> var1 var2 .)
    PRINCIPAL       reduce using rule 7 (var2 -> var1 var2 .)
    LCURLY          reduce using rule 7 (var2 -> var1 var2 .)


state 22

    (6) var1 -> tipo lista_ids . SEMICOLON
    (12) lista_ids -> lista_ids . COMMA var_decl

    SEMICOLON       shift and go to state 34
    COMMA           shift and go to state 35


state 23

    (13) lista_ids -> var_decl .

    SEMICOLON       reduce using rule 13 (lista_ids -> var_decl .)
    COMMA           reduce using rule 13 (lista_ids -> var_decl .)


state 24

    (9) var_decl -> ID .
    (10) var_decl -> ID . LBRACKET CTEI RBRACKET
    (11) var_decl -> ID . LBRACKET exp RBRACKET

    SEMICOLON       reduce using rule 9 (var_decl -> ID .)
    COMMA           reduce using rule 9 (var_decl -> ID .)
    LBRACKET        shift and go to state 36


state 25

    (2) programa -> PROGRAMA ID SEMICOLON addMain vars createTable func_declarations main . showstacks
    (109) showstacks -> . empty
    (1) empty -> .

    $end            reduce using rule 1 (empty -> .)

    showstacks                     shift and go to state 37
    empty                          shift and go to state 38

state 26

    (42) main -> printfuncs . PRINCIPAL LPAREN RPAREN fillFirst bloque mergetables

    PRINCIPAL       shift and go to state 39


state 27

    (110) printfuncs -> empty .

    PRINCIPAL       reduce using rule 110 (printfuncs -> empty .)


state 28

    (17) func_declarations -> func_decl funcBody . func_declarations
    (17) func_declarations -> . func_decl funcBody func_declarations
    (18) func_declarations -> . empty
    (19) func_decl -> . FUNCION func2 func3 LPAREN params RPAREN vars
    (20) func_decl -> . FUNCION func2 func3 LPAREN RPAREN vars
    (21) func_decl -> . FUNCION func2 func3 LPAREN params RPAREN
    (22) func_decl -> . FUNCION func2 func3 LPAREN RPAREN
    (1) empty -> .

    FUNCION         shift and go to state 20
    PRINCIPAL       reduce using rule 1 (empty -> .)

    func_decl                      shift and go to state 18
    func_declarations              shift and go to state 40
    empty                          shift and go to state 19

state 29

    (23) funcBody -> bloque . endFunc
    (27) endFunc -> . empty
    (1) empty -> .

    FUNCION         reduce using rule 1 (empty -> .)
    PRINCIPAL       reduce using rule 1 (empty -> .)

    endFunc                        shift and go to state 41
    empty                          shift and go to state 42

state 30

    (28) bloque -> LCURLY . bloque1 RCURLY
    (29) bloque1 -> . estatuto bloque1
    (30) bloque1 -> . empty
    (31) estatuto -> . asig
    (32) estatuto -> . cond
    (33) estatuto -> . retorno
    (34) estatuto -> . lectura
    (35) estatuto -> . escritura
    (36) estatuto -> . llamada SEMICOLON
    (37) estatuto -> . repeticion
    (1) empty -> .
    (38) asig -> . variable addVar EQUAL addAsig exp genAsig SEMICOLON
    (61) cond -> . SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2
    (47) retorno -> . REGRESA LPAREN exp RPAREN SEMICOLON
    (54) lectura -> . LEE LPAREN variable RPAREN SEMICOLON
    (55) escritura -> . ESCRIBE LPAREN escritura2 RPAREN SEMICOLON
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (67) repeticion -> . condicional
    (68) repeticion -> . nocondicional
    (104) variable -> . ID
    (50) iniciaLlamada -> . ID LPAREN
    (69) condicional -> . MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile
    (73) nocondicional -> . DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor

    RCURLY          reduce using rule 1 (empty -> .)
    SI              shift and go to state 54
    REGRESA         shift and go to state 55
    LEE             shift and go to state 56
    ESCRIBE         shift and go to state 57
    ID              shift and go to state 61
    MIENTRAS        shift and go to state 62
    DESDE           shift and go to state 63

    bloque1                        shift and go to state 43
    estatuto                       shift and go to state 44
    empty                          shift and go to state 45
    asig                           shift and go to state 46
    cond                           shift and go to state 47
    retorno                        shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    llamada                        shift and go to state 51
    repeticion                     shift and go to state 52
    variable                       shift and go to state 53
    iniciaLlamada                  shift and go to state 58
    condicional                    shift and go to state 59
    nocondicional                  shift and go to state 60

state 31

    (19) func_decl -> FUNCION func2 . func3 LPAREN params RPAREN vars
    (20) func_decl -> FUNCION func2 . func3 LPAREN RPAREN vars
    (21) func_decl -> FUNCION func2 . func3 LPAREN params RPAREN
    (22) func_decl -> FUNCION func2 . func3 LPAREN RPAREN
    (24) func3 -> . ID

    ID              shift and go to state 65

    func3                          shift and go to state 64

state 32

    (25) func2 -> tipo .

    ID              reduce using rule 25 (func2 -> tipo .)


state 33

    (26) func2 -> VOID .

    ID              reduce using rule 26 (func2 -> VOID .)


state 34

    (6) var1 -> tipo lista_ids SEMICOLON .

    INT             reduce using rule 6 (var1 -> tipo lista_ids SEMICOLON .)
    FLOAT           reduce using rule 6 (var1 -> tipo lista_ids SEMICOLON .)
    CHAR            reduce using rule 6 (var1 -> tipo lista_ids SEMICOLON .)
    FUNCION         reduce using rule 6 (var1 -> tipo lista_ids SEMICOLON .)
    PRINCIPAL       reduce using rule 6 (var1 -> tipo lista_ids SEMICOLON .)
    LCURLY          reduce using rule 6 (var1 -> tipo lista_ids SEMICOLON .)


state 35

    (12) lista_ids -> lista_ids COMMA . var_decl
    (9) var_decl -> . ID
    (10) var_decl -> . ID LBRACKET CTEI RBRACKET
    (11) var_decl -> . ID LBRACKET exp RBRACKET

    ID              shift and go to state 24

    var_decl                       shift and go to state 66

state 36

    (10) var_decl -> ID LBRACKET . CTEI RBRACKET
    (11) var_decl -> ID LBRACKET . exp RBRACKET
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    CTEI            shift and go to state 67
    LPAREN          shift and go to state 74
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    exp                            shift and go to state 68
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 37

    (2) programa -> PROGRAMA ID SEMICOLON addMain vars createTable func_declarations main showstacks .

    $end            reduce using rule 2 (programa -> PROGRAMA ID SEMICOLON addMain vars createTable func_declarations main showstacks .)


state 38

    (109) showstacks -> empty .

    $end            reduce using rule 109 (showstacks -> empty .)


state 39

    (42) main -> printfuncs PRINCIPAL . LPAREN RPAREN fillFirst bloque mergetables

    LPAREN          shift and go to state 80


state 40

    (17) func_declarations -> func_decl funcBody func_declarations .

    PRINCIPAL       reduce using rule 17 (func_declarations -> func_decl funcBody func_declarations .)


state 41

    (23) funcBody -> bloque endFunc .

    FUNCION         reduce using rule 23 (funcBody -> bloque endFunc .)
    PRINCIPAL       reduce using rule 23 (funcBody -> bloque endFunc .)


state 42

    (27) endFunc -> empty .

    FUNCION         reduce using rule 27 (endFunc -> empty .)
    PRINCIPAL       reduce using rule 27 (endFunc -> empty .)


state 43

    (28) bloque -> LCURLY bloque1 . RCURLY

    RCURLY          shift and go to state 81


state 44

    (29) bloque1 -> estatuto . bloque1
    (29) bloque1 -> . estatuto bloque1
    (30) bloque1 -> . empty
    (31) estatuto -> . asig
    (32) estatuto -> . cond
    (33) estatuto -> . retorno
    (34) estatuto -> . lectura
    (35) estatuto -> . escritura
    (36) estatuto -> . llamada SEMICOLON
    (37) estatuto -> . repeticion
    (1) empty -> .
    (38) asig -> . variable addVar EQUAL addAsig exp genAsig SEMICOLON
    (61) cond -> . SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2
    (47) retorno -> . REGRESA LPAREN exp RPAREN SEMICOLON
    (54) lectura -> . LEE LPAREN variable RPAREN SEMICOLON
    (55) escritura -> . ESCRIBE LPAREN escritura2 RPAREN SEMICOLON
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (67) repeticion -> . condicional
    (68) repeticion -> . nocondicional
    (104) variable -> . ID
    (50) iniciaLlamada -> . ID LPAREN
    (69) condicional -> . MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile
    (73) nocondicional -> . DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor

    RCURLY          reduce using rule 1 (empty -> .)
    SI              shift and go to state 54
    REGRESA         shift and go to state 55
    LEE             shift and go to state 56
    ESCRIBE         shift and go to state 57
    ID              shift and go to state 61
    MIENTRAS        shift and go to state 62
    DESDE           shift and go to state 63

    estatuto                       shift and go to state 44
    bloque1                        shift and go to state 82
    empty                          shift and go to state 45
    asig                           shift and go to state 46
    cond                           shift and go to state 47
    retorno                        shift and go to state 48
    lectura                        shift and go to state 49
    escritura                      shift and go to state 50
    llamada                        shift and go to state 51
    repeticion                     shift and go to state 52
    variable                       shift and go to state 53
    iniciaLlamada                  shift and go to state 58
    condicional                    shift and go to state 59
    nocondicional                  shift and go to state 60

state 45

    (30) bloque1 -> empty .

    RCURLY          reduce using rule 30 (bloque1 -> empty .)


state 46

    (31) estatuto -> asig .

    SI              reduce using rule 31 (estatuto -> asig .)
    REGRESA         reduce using rule 31 (estatuto -> asig .)
    LEE             reduce using rule 31 (estatuto -> asig .)
    ESCRIBE         reduce using rule 31 (estatuto -> asig .)
    ID              reduce using rule 31 (estatuto -> asig .)
    MIENTRAS        reduce using rule 31 (estatuto -> asig .)
    DESDE           reduce using rule 31 (estatuto -> asig .)
    RCURLY          reduce using rule 31 (estatuto -> asig .)


state 47

    (32) estatuto -> cond .

    SI              reduce using rule 32 (estatuto -> cond .)
    REGRESA         reduce using rule 32 (estatuto -> cond .)
    LEE             reduce using rule 32 (estatuto -> cond .)
    ESCRIBE         reduce using rule 32 (estatuto -> cond .)
    ID              reduce using rule 32 (estatuto -> cond .)
    MIENTRAS        reduce using rule 32 (estatuto -> cond .)
    DESDE           reduce using rule 32 (estatuto -> cond .)
    RCURLY          reduce using rule 32 (estatuto -> cond .)


state 48

    (33) estatuto -> retorno .

    SI              reduce using rule 33 (estatuto -> retorno .)
    REGRESA         reduce using rule 33 (estatuto -> retorno .)
    LEE             reduce using rule 33 (estatuto -> retorno .)
    ESCRIBE         reduce using rule 33 (estatuto -> retorno .)
    ID              reduce using rule 33 (estatuto -> retorno .)
    MIENTRAS        reduce using rule 33 (estatuto -> retorno .)
    DESDE           reduce using rule 33 (estatuto -> retorno .)
    RCURLY          reduce using rule 33 (estatuto -> retorno .)


state 49

    (34) estatuto -> lectura .

    SI              reduce using rule 34 (estatuto -> lectura .)
    REGRESA         reduce using rule 34 (estatuto -> lectura .)
    LEE             reduce using rule 34 (estatuto -> lectura .)
    ESCRIBE         reduce using rule 34 (estatuto -> lectura .)
    ID              reduce using rule 34 (estatuto -> lectura .)
    MIENTRAS        reduce using rule 34 (estatuto -> lectura .)
    DESDE           reduce using rule 34 (estatuto -> lectura .)
    RCURLY          reduce using rule 34 (estatuto -> lectura .)


state 50

    (35) estatuto -> escritura .

    SI              reduce using rule 35 (estatuto -> escritura .)
    REGRESA         reduce using rule 35 (estatuto -> escritura .)
    LEE             reduce using rule 35 (estatuto -> escritura .)
    ESCRIBE         reduce using rule 35 (estatuto -> escritura .)
    ID              reduce using rule 35 (estatuto -> escritura .)
    MIENTRAS        reduce using rule 35 (estatuto -> escritura .)
    DESDE           reduce using rule 35 (estatuto -> escritura .)
    RCURLY          reduce using rule 35 (estatuto -> escritura .)


state 51

    (36) estatuto -> llamada . SEMICOLON

    SEMICOLON       shift and go to state 83


state 52

    (37) estatuto -> repeticion .

    SI              reduce using rule 37 (estatuto -> repeticion .)
    REGRESA         reduce using rule 37 (estatuto -> repeticion .)
    LEE             reduce using rule 37 (estatuto -> repeticion .)
    ESCRIBE         reduce using rule 37 (estatuto -> repeticion .)
    ID              reduce using rule 37 (estatuto -> repeticion .)
    MIENTRAS        reduce using rule 37 (estatuto -> repeticion .)
    DESDE           reduce using rule 37 (estatuto -> repeticion .)
    RCURLY          reduce using rule 37 (estatuto -> repeticion .)


state 53

    (38) asig -> variable . addVar EQUAL addAsig exp genAsig SEMICOLON
    (39) addVar -> .

    EQUAL           reduce using rule 39 (addVar -> .)

    addVar                         shift and go to state 84

state 54

    (61) cond -> SI . LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2

    LPAREN          shift and go to state 85


state 55

    (47) retorno -> REGRESA . LPAREN exp RPAREN SEMICOLON

    LPAREN          shift and go to state 86


state 56

    (54) lectura -> LEE . LPAREN variable RPAREN SEMICOLON

    LPAREN          shift and go to state 87


state 57

    (55) escritura -> ESCRIBE . LPAREN escritura2 RPAREN SEMICOLON

    LPAREN          shift and go to state 88


state 58

    (48) llamada -> iniciaLlamada . llamada2 endLlamada RPAREN
    (49) llamada -> iniciaLlamada . endLlamada RPAREN
    (51) llamada2 -> . exp COMMA llamada2
    (52) llamada2 -> . exp
    (53) endLlamada -> .
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    RPAREN          reduce using rule 53 (endLlamada -> .)
    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    iniciaLlamada                  shift and go to state 58
    llamada2                       shift and go to state 89
    endLlamada                     shift and go to state 90
    exp                            shift and go to state 91
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77

state 59

    (67) repeticion -> condicional .

    SI              reduce using rule 67 (repeticion -> condicional .)
    REGRESA         reduce using rule 67 (repeticion -> condicional .)
    LEE             reduce using rule 67 (repeticion -> condicional .)
    ESCRIBE         reduce using rule 67 (repeticion -> condicional .)
    ID              reduce using rule 67 (repeticion -> condicional .)
    MIENTRAS        reduce using rule 67 (repeticion -> condicional .)
    DESDE           reduce using rule 67 (repeticion -> condicional .)
    RCURLY          reduce using rule 67 (repeticion -> condicional .)


state 60

    (68) repeticion -> nocondicional .

    SI              reduce using rule 68 (repeticion -> nocondicional .)
    REGRESA         reduce using rule 68 (repeticion -> nocondicional .)
    LEE             reduce using rule 68 (repeticion -> nocondicional .)
    ESCRIBE         reduce using rule 68 (repeticion -> nocondicional .)
    ID              reduce using rule 68 (repeticion -> nocondicional .)
    MIENTRAS        reduce using rule 68 (repeticion -> nocondicional .)
    DESDE           reduce using rule 68 (repeticion -> nocondicional .)
    RCURLY          reduce using rule 68 (repeticion -> nocondicional .)


state 61

    (104) variable -> ID .
    (50) iniciaLlamada -> ID . LPAREN

    EQUAL           reduce using rule 104 (variable -> ID .)
    TIMES           reduce using rule 104 (variable -> ID .)
    DIVIDE          reduce using rule 104 (variable -> ID .)
    PLUS            reduce using rule 104 (variable -> ID .)
    MINUS           reduce using rule 104 (variable -> ID .)
    LESS            reduce using rule 104 (variable -> ID .)
    LESSO           reduce using rule 104 (variable -> ID .)
    GREATER         reduce using rule 104 (variable -> ID .)
    GREATERO        reduce using rule 104 (variable -> ID .)
    NOTEQUAL        reduce using rule 104 (variable -> ID .)
    EQUALS          reduce using rule 104 (variable -> ID .)
    AND             reduce using rule 104 (variable -> ID .)
    OR              reduce using rule 104 (variable -> ID .)
    RBRACKET        reduce using rule 104 (variable -> ID .)
    COMMA           reduce using rule 104 (variable -> ID .)
    RPAREN          reduce using rule 104 (variable -> ID .)
    SEMICOLON       reduce using rule 104 (variable -> ID .)
    LPAREN          shift and go to state 93


state 62

    (69) condicional -> MIENTRAS . regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile
    (70) regWhile -> . empty
    (1) empty -> .

    LPAREN          reduce using rule 1 (empty -> .)

    regWhile                       shift and go to state 94
    empty                          shift and go to state 95

state 63

    (73) nocondicional -> DESDE . ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor

    ID              shift and go to state 96


state 64

    (19) func_decl -> FUNCION func2 func3 . LPAREN params RPAREN vars
    (20) func_decl -> FUNCION func2 func3 . LPAREN RPAREN vars
    (21) func_decl -> FUNCION func2 func3 . LPAREN params RPAREN
    (22) func_decl -> FUNCION func2 func3 . LPAREN RPAREN

    LPAREN          shift and go to state 97


state 65

    (24) func3 -> ID .

    LPAREN          reduce using rule 24 (func3 -> ID .)


state 66

    (12) lista_ids -> lista_ids COMMA var_decl .

    SEMICOLON       reduce using rule 12 (lista_ids -> lista_ids COMMA var_decl .)
    COMMA           reduce using rule 12 (lista_ids -> lista_ids COMMA var_decl .)


state 67

    (10) var_decl -> ID LBRACKET CTEI . RBRACKET
    (105) varcte -> CTEI .

  ! shift/reduce conflict for RBRACKET resolved as shift
    RBRACKET        shift and go to state 98
    TIMES           reduce using rule 105 (varcte -> CTEI .)
    DIVIDE          reduce using rule 105 (varcte -> CTEI .)
    PLUS            reduce using rule 105 (varcte -> CTEI .)
    MINUS           reduce using rule 105 (varcte -> CTEI .)
    LESS            reduce using rule 105 (varcte -> CTEI .)
    LESSO           reduce using rule 105 (varcte -> CTEI .)
    GREATER         reduce using rule 105 (varcte -> CTEI .)
    GREATERO        reduce using rule 105 (varcte -> CTEI .)
    NOTEQUAL        reduce using rule 105 (varcte -> CTEI .)
    EQUALS          reduce using rule 105 (varcte -> CTEI .)
    AND             reduce using rule 105 (varcte -> CTEI .)
    OR              reduce using rule 105 (varcte -> CTEI .)

  ! RBRACKET        [ reduce using rule 105 (varcte -> CTEI .) ]


state 68

    (11) var_decl -> ID LBRACKET exp . RBRACKET

    RBRACKET        shift and go to state 99


state 69

    (76) exp -> texp . exp1
    (77) exp1 -> . OR texp exp1
    (78) exp1 -> . empty
    (1) empty -> .

    OR              shift and go to state 101
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    exp1                           shift and go to state 100
    empty                          shift and go to state 102

state 70

    (79) texp -> gexp . texp1
    (80) texp1 -> . AND gexp texp1
    (81) texp1 -> . empty
    (1) empty -> .

    AND             shift and go to state 104
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    texp1                          shift and go to state 103
    empty                          shift and go to state 105

state 71

    (82) gexp -> mexp . gexp1
    (83) gexp1 -> . gexp2 mexp gexp1
    (84) gexp1 -> . empty
    (85) gexp2 -> . LESS
    (86) gexp2 -> . LESSO
    (87) gexp2 -> . GREATER
    (88) gexp2 -> . GREATERO
    (89) gexp2 -> . NOTEQUAL
    (90) gexp2 -> . EQUALS
    (1) empty -> .

    LESS            shift and go to state 109
    LESSO           shift and go to state 110
    GREATER         shift and go to state 111
    GREATERO        shift and go to state 112
    NOTEQUAL        shift and go to state 113
    EQUALS          shift and go to state 114
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    gexp1                          shift and go to state 106
    gexp2                          shift and go to state 107
    empty                          shift and go to state 108

state 72

    (91) mexp -> termino . mexp1
    (92) mexp1 -> . mexp2 termino mexp1
    (93) mexp1 -> . empty
    (94) mexp2 -> . PLUS
    (95) mexp2 -> . MINUS
    (1) empty -> .

    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    LESS            reduce using rule 1 (empty -> .)
    LESSO           reduce using rule 1 (empty -> .)
    GREATER         reduce using rule 1 (empty -> .)
    GREATERO        reduce using rule 1 (empty -> .)
    NOTEQUAL        reduce using rule 1 (empty -> .)
    EQUALS          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    mexp1                          shift and go to state 115
    mexp2                          shift and go to state 116
    empty                          shift and go to state 117

state 73

    (96) termino -> factor . termino1
    (97) termino1 -> . TIMES factor termino1
    (98) termino1 -> . DIVIDE factor termino1
    (99) termino1 -> . empty
    (1) empty -> .

    TIMES           shift and go to state 121
    DIVIDE          shift and go to state 122
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESS            reduce using rule 1 (empty -> .)
    LESSO           reduce using rule 1 (empty -> .)
    GREATER         reduce using rule 1 (empty -> .)
    GREATERO        reduce using rule 1 (empty -> .)
    NOTEQUAL        reduce using rule 1 (empty -> .)
    EQUALS          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    termino1                       shift and go to state 120
    empty                          shift and go to state 123

state 74

    (100) factor -> LPAREN . exp RPAREN
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    exp                            shift and go to state 124
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 75

    (101) factor -> varcte .

    TIMES           reduce using rule 101 (factor -> varcte .)
    DIVIDE          reduce using rule 101 (factor -> varcte .)
    PLUS            reduce using rule 101 (factor -> varcte .)
    MINUS           reduce using rule 101 (factor -> varcte .)
    LESS            reduce using rule 101 (factor -> varcte .)
    LESSO           reduce using rule 101 (factor -> varcte .)
    GREATER         reduce using rule 101 (factor -> varcte .)
    GREATERO        reduce using rule 101 (factor -> varcte .)
    NOTEQUAL        reduce using rule 101 (factor -> varcte .)
    EQUALS          reduce using rule 101 (factor -> varcte .)
    AND             reduce using rule 101 (factor -> varcte .)
    OR              reduce using rule 101 (factor -> varcte .)
    RBRACKET        reduce using rule 101 (factor -> varcte .)
    COMMA           reduce using rule 101 (factor -> varcte .)
    RPAREN          reduce using rule 101 (factor -> varcte .)
    SEMICOLON       reduce using rule 101 (factor -> varcte .)


state 76

    (102) factor -> variable .

    TIMES           reduce using rule 102 (factor -> variable .)
    DIVIDE          reduce using rule 102 (factor -> variable .)
    PLUS            reduce using rule 102 (factor -> variable .)
    MINUS           reduce using rule 102 (factor -> variable .)
    LESS            reduce using rule 102 (factor -> variable .)
    LESSO           reduce using rule 102 (factor -> variable .)
    GREATER         reduce using rule 102 (factor -> variable .)
    GREATERO        reduce using rule 102 (factor -> variable .)
    NOTEQUAL        reduce using rule 102 (factor -> variable .)
    EQUALS          reduce using rule 102 (factor -> variable .)
    AND             reduce using rule 102 (factor -> variable .)
    OR              reduce using rule 102 (factor -> variable .)
    RBRACKET        reduce using rule 102 (factor -> variable .)
    COMMA           reduce using rule 102 (factor -> variable .)
    RPAREN          reduce using rule 102 (factor -> variable .)
    SEMICOLON       reduce using rule 102 (factor -> variable .)


state 77

    (103) factor -> llamada .

    TIMES           reduce using rule 103 (factor -> llamada .)
    DIVIDE          reduce using rule 103 (factor -> llamada .)
    PLUS            reduce using rule 103 (factor -> llamada .)
    MINUS           reduce using rule 103 (factor -> llamada .)
    LESS            reduce using rule 103 (factor -> llamada .)
    LESSO           reduce using rule 103 (factor -> llamada .)
    GREATER         reduce using rule 103 (factor -> llamada .)
    GREATERO        reduce using rule 103 (factor -> llamada .)
    NOTEQUAL        reduce using rule 103 (factor -> llamada .)
    EQUALS          reduce using rule 103 (factor -> llamada .)
    AND             reduce using rule 103 (factor -> llamada .)
    OR              reduce using rule 103 (factor -> llamada .)
    RBRACKET        reduce using rule 103 (factor -> llamada .)
    COMMA           reduce using rule 103 (factor -> llamada .)
    RPAREN          reduce using rule 103 (factor -> llamada .)
    SEMICOLON       reduce using rule 103 (factor -> llamada .)


state 78

    (106) varcte -> CTEF .

    TIMES           reduce using rule 106 (varcte -> CTEF .)
    DIVIDE          reduce using rule 106 (varcte -> CTEF .)
    PLUS            reduce using rule 106 (varcte -> CTEF .)
    MINUS           reduce using rule 106 (varcte -> CTEF .)
    LESS            reduce using rule 106 (varcte -> CTEF .)
    LESSO           reduce using rule 106 (varcte -> CTEF .)
    GREATER         reduce using rule 106 (varcte -> CTEF .)
    GREATERO        reduce using rule 106 (varcte -> CTEF .)
    NOTEQUAL        reduce using rule 106 (varcte -> CTEF .)
    EQUALS          reduce using rule 106 (varcte -> CTEF .)
    AND             reduce using rule 106 (varcte -> CTEF .)
    OR              reduce using rule 106 (varcte -> CTEF .)
    RBRACKET        reduce using rule 106 (varcte -> CTEF .)
    COMMA           reduce using rule 106 (varcte -> CTEF .)
    RPAREN          reduce using rule 106 (varcte -> CTEF .)
    SEMICOLON       reduce using rule 106 (varcte -> CTEF .)


state 79

    (107) varcte -> CTEC .

    TIMES           reduce using rule 107 (varcte -> CTEC .)
    DIVIDE          reduce using rule 107 (varcte -> CTEC .)
    PLUS            reduce using rule 107 (varcte -> CTEC .)
    MINUS           reduce using rule 107 (varcte -> CTEC .)
    LESS            reduce using rule 107 (varcte -> CTEC .)
    LESSO           reduce using rule 107 (varcte -> CTEC .)
    GREATER         reduce using rule 107 (varcte -> CTEC .)
    GREATERO        reduce using rule 107 (varcte -> CTEC .)
    NOTEQUAL        reduce using rule 107 (varcte -> CTEC .)
    EQUALS          reduce using rule 107 (varcte -> CTEC .)
    AND             reduce using rule 107 (varcte -> CTEC .)
    OR              reduce using rule 107 (varcte -> CTEC .)
    RBRACKET        reduce using rule 107 (varcte -> CTEC .)
    COMMA           reduce using rule 107 (varcte -> CTEC .)
    RPAREN          reduce using rule 107 (varcte -> CTEC .)
    SEMICOLON       reduce using rule 107 (varcte -> CTEC .)


state 80

    (42) main -> printfuncs PRINCIPAL LPAREN . RPAREN fillFirst bloque mergetables

    RPAREN          shift and go to state 125


state 81

    (28) bloque -> LCURLY bloque1 RCURLY .

    FUNCION         reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    PRINCIPAL       reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    $end            reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    SINO            reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    SI              reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    REGRESA         reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    LEE             reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    ESCRIBE         reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    ID              reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    MIENTRAS        reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    DESDE           reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)
    RCURLY          reduce using rule 28 (bloque -> LCURLY bloque1 RCURLY .)


state 82

    (29) bloque1 -> estatuto bloque1 .

    RCURLY          reduce using rule 29 (bloque1 -> estatuto bloque1 .)


state 83

    (36) estatuto -> llamada SEMICOLON .

    SI              reduce using rule 36 (estatuto -> llamada SEMICOLON .)
    REGRESA         reduce using rule 36 (estatuto -> llamada SEMICOLON .)
    LEE             reduce using rule 36 (estatuto -> llamada SEMICOLON .)
    ESCRIBE         reduce using rule 36 (estatuto -> llamada SEMICOLON .)
    ID              reduce using rule 36 (estatuto -> llamada SEMICOLON .)
    MIENTRAS        reduce using rule 36 (estatuto -> llamada SEMICOLON .)
    DESDE           reduce using rule 36 (estatuto -> llamada SEMICOLON .)
    RCURLY          reduce using rule 36 (estatuto -> llamada SEMICOLON .)


state 84

    (38) asig -> variable addVar . EQUAL addAsig exp genAsig SEMICOLON

    EQUAL           shift and go to state 126


state 85

    (61) cond -> SI LPAREN . exp RPAREN cond1 ENTONCES bloque elsePart cond2
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    exp                            shift and go to state 127
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 86

    (47) retorno -> REGRESA LPAREN . exp RPAREN SEMICOLON
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    exp                            shift and go to state 128
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 87

    (54) lectura -> LEE LPAREN . variable RPAREN SEMICOLON
    (104) variable -> . ID

    ID              shift and go to state 130

    variable                       shift and go to state 129

state 88

    (55) escritura -> ESCRIBE LPAREN . escritura2 RPAREN SEMICOLON
    (58) escritura2 -> . escritura1 addescritura COMMA escritura2
    (59) escritura2 -> . escritura1 addescritura
    (56) escritura1 -> . CTES
    (57) escritura1 -> . exp
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    CTES            shift and go to state 133
    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    escritura2                     shift and go to state 131
    escritura1                     shift and go to state 132
    exp                            shift and go to state 134
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 89

    (48) llamada -> iniciaLlamada llamada2 . endLlamada RPAREN
    (53) endLlamada -> .

    RPAREN          reduce using rule 53 (endLlamada -> .)

    endLlamada                     shift and go to state 135

state 90

    (49) llamada -> iniciaLlamada endLlamada . RPAREN

    RPAREN          shift and go to state 136


state 91

    (51) llamada2 -> exp . COMMA llamada2
    (52) llamada2 -> exp .

    COMMA           shift and go to state 137
    RPAREN          reduce using rule 52 (llamada2 -> exp .)


state 92

    (105) varcte -> CTEI .

    TIMES           reduce using rule 105 (varcte -> CTEI .)
    DIVIDE          reduce using rule 105 (varcte -> CTEI .)
    PLUS            reduce using rule 105 (varcte -> CTEI .)
    MINUS           reduce using rule 105 (varcte -> CTEI .)
    LESS            reduce using rule 105 (varcte -> CTEI .)
    LESSO           reduce using rule 105 (varcte -> CTEI .)
    GREATER         reduce using rule 105 (varcte -> CTEI .)
    GREATERO        reduce using rule 105 (varcte -> CTEI .)
    NOTEQUAL        reduce using rule 105 (varcte -> CTEI .)
    EQUALS          reduce using rule 105 (varcte -> CTEI .)
    AND             reduce using rule 105 (varcte -> CTEI .)
    OR              reduce using rule 105 (varcte -> CTEI .)
    COMMA           reduce using rule 105 (varcte -> CTEI .)
    RPAREN          reduce using rule 105 (varcte -> CTEI .)
    RBRACKET        reduce using rule 105 (varcte -> CTEI .)
    SEMICOLON       reduce using rule 105 (varcte -> CTEI .)


state 93

    (50) iniciaLlamada -> ID LPAREN .

    LPAREN          reduce using rule 50 (iniciaLlamada -> ID LPAREN .)
    CTEI            reduce using rule 50 (iniciaLlamada -> ID LPAREN .)
    CTEF            reduce using rule 50 (iniciaLlamada -> ID LPAREN .)
    CTEC            reduce using rule 50 (iniciaLlamada -> ID LPAREN .)
    ID              reduce using rule 50 (iniciaLlamada -> ID LPAREN .)
    RPAREN          reduce using rule 50 (iniciaLlamada -> ID LPAREN .)


state 94

    (69) condicional -> MIENTRAS regWhile . LPAREN exp RPAREN whileCond HAZ bloque endWhile

    LPAREN          shift and go to state 138


state 95

    (70) regWhile -> empty .

    LPAREN          reduce using rule 70 (regWhile -> empty .)


state 96

    (73) nocondicional -> DESDE ID . EQUAL CTEI HASTA CTEI createFor HACER bloque endFor

    EQUAL           shift and go to state 139


state 97

    (19) func_decl -> FUNCION func2 func3 LPAREN . params RPAREN vars
    (20) func_decl -> FUNCION func2 func3 LPAREN . RPAREN vars
    (21) func_decl -> FUNCION func2 func3 LPAREN . params RPAREN
    (22) func_decl -> FUNCION func2 func3 LPAREN . RPAREN
    (45) params -> . params COMMA param_decl
    (46) params -> . param_decl
    (44) param_decl -> . tipo ID
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR

    RPAREN          shift and go to state 141
    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    params                         shift and go to state 140
    param_decl                     shift and go to state 142
    tipo                           shift and go to state 143

state 98

    (10) var_decl -> ID LBRACKET CTEI RBRACKET .

    SEMICOLON       reduce using rule 10 (var_decl -> ID LBRACKET CTEI RBRACKET .)
    COMMA           reduce using rule 10 (var_decl -> ID LBRACKET CTEI RBRACKET .)


state 99

    (11) var_decl -> ID LBRACKET exp RBRACKET .

    SEMICOLON       reduce using rule 11 (var_decl -> ID LBRACKET exp RBRACKET .)
    COMMA           reduce using rule 11 (var_decl -> ID LBRACKET exp RBRACKET .)


state 100

    (76) exp -> texp exp1 .

    RBRACKET        reduce using rule 76 (exp -> texp exp1 .)
    COMMA           reduce using rule 76 (exp -> texp exp1 .)
    RPAREN          reduce using rule 76 (exp -> texp exp1 .)
    SEMICOLON       reduce using rule 76 (exp -> texp exp1 .)


state 101

    (77) exp1 -> OR . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    texp                           shift and go to state 144
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 102

    (78) exp1 -> empty .

    RBRACKET        reduce using rule 78 (exp1 -> empty .)
    COMMA           reduce using rule 78 (exp1 -> empty .)
    RPAREN          reduce using rule 78 (exp1 -> empty .)
    SEMICOLON       reduce using rule 78 (exp1 -> empty .)


state 103

    (79) texp -> gexp texp1 .

    OR              reduce using rule 79 (texp -> gexp texp1 .)
    RBRACKET        reduce using rule 79 (texp -> gexp texp1 .)
    COMMA           reduce using rule 79 (texp -> gexp texp1 .)
    RPAREN          reduce using rule 79 (texp -> gexp texp1 .)
    SEMICOLON       reduce using rule 79 (texp -> gexp texp1 .)


state 104

    (80) texp1 -> AND . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    gexp                           shift and go to state 145
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 105

    (81) texp1 -> empty .

    OR              reduce using rule 81 (texp1 -> empty .)
    RBRACKET        reduce using rule 81 (texp1 -> empty .)
    COMMA           reduce using rule 81 (texp1 -> empty .)
    RPAREN          reduce using rule 81 (texp1 -> empty .)
    SEMICOLON       reduce using rule 81 (texp1 -> empty .)


state 106

    (82) gexp -> mexp gexp1 .

    AND             reduce using rule 82 (gexp -> mexp gexp1 .)
    OR              reduce using rule 82 (gexp -> mexp gexp1 .)
    RBRACKET        reduce using rule 82 (gexp -> mexp gexp1 .)
    COMMA           reduce using rule 82 (gexp -> mexp gexp1 .)
    RPAREN          reduce using rule 82 (gexp -> mexp gexp1 .)
    SEMICOLON       reduce using rule 82 (gexp -> mexp gexp1 .)


state 107

    (83) gexp1 -> gexp2 . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    mexp                           shift and go to state 146
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 108

    (84) gexp1 -> empty .

    AND             reduce using rule 84 (gexp1 -> empty .)
    OR              reduce using rule 84 (gexp1 -> empty .)
    RBRACKET        reduce using rule 84 (gexp1 -> empty .)
    COMMA           reduce using rule 84 (gexp1 -> empty .)
    RPAREN          reduce using rule 84 (gexp1 -> empty .)
    SEMICOLON       reduce using rule 84 (gexp1 -> empty .)


state 109

    (85) gexp2 -> LESS .

    LPAREN          reduce using rule 85 (gexp2 -> LESS .)
    CTEI            reduce using rule 85 (gexp2 -> LESS .)
    CTEF            reduce using rule 85 (gexp2 -> LESS .)
    CTEC            reduce using rule 85 (gexp2 -> LESS .)
    ID              reduce using rule 85 (gexp2 -> LESS .)


state 110

    (86) gexp2 -> LESSO .

    LPAREN          reduce using rule 86 (gexp2 -> LESSO .)
    CTEI            reduce using rule 86 (gexp2 -> LESSO .)
    CTEF            reduce using rule 86 (gexp2 -> LESSO .)
    CTEC            reduce using rule 86 (gexp2 -> LESSO .)
    ID              reduce using rule 86 (gexp2 -> LESSO .)


state 111

    (87) gexp2 -> GREATER .

    LPAREN          reduce using rule 87 (gexp2 -> GREATER .)
    CTEI            reduce using rule 87 (gexp2 -> GREATER .)
    CTEF            reduce using rule 87 (gexp2 -> GREATER .)
    CTEC            reduce using rule 87 (gexp2 -> GREATER .)
    ID              reduce using rule 87 (gexp2 -> GREATER .)


state 112

    (88) gexp2 -> GREATERO .

    LPAREN          reduce using rule 88 (gexp2 -> GREATERO .)
    CTEI            reduce using rule 88 (gexp2 -> GREATERO .)
    CTEF            reduce using rule 88 (gexp2 -> GREATERO .)
    CTEC            reduce using rule 88 (gexp2 -> GREATERO .)
    ID              reduce using rule 88 (gexp2 -> GREATERO .)


state 113

    (89) gexp2 -> NOTEQUAL .

    LPAREN          reduce using rule 89 (gexp2 -> NOTEQUAL .)
    CTEI            reduce using rule 89 (gexp2 -> NOTEQUAL .)
    CTEF            reduce using rule 89 (gexp2 -> NOTEQUAL .)
    CTEC            reduce using rule 89 (gexp2 -> NOTEQUAL .)
    ID              reduce using rule 89 (gexp2 -> NOTEQUAL .)


state 114

    (90) gexp2 -> EQUALS .

    LPAREN          reduce using rule 90 (gexp2 -> EQUALS .)
    CTEI            reduce using rule 90 (gexp2 -> EQUALS .)
    CTEF            reduce using rule 90 (gexp2 -> EQUALS .)
    CTEC            reduce using rule 90 (gexp2 -> EQUALS .)
    ID              reduce using rule 90 (gexp2 -> EQUALS .)


state 115

    (91) mexp -> termino mexp1 .

    LESS            reduce using rule 91 (mexp -> termino mexp1 .)
    LESSO           reduce using rule 91 (mexp -> termino mexp1 .)
    GREATER         reduce using rule 91 (mexp -> termino mexp1 .)
    GREATERO        reduce using rule 91 (mexp -> termino mexp1 .)
    NOTEQUAL        reduce using rule 91 (mexp -> termino mexp1 .)
    EQUALS          reduce using rule 91 (mexp -> termino mexp1 .)
    AND             reduce using rule 91 (mexp -> termino mexp1 .)
    OR              reduce using rule 91 (mexp -> termino mexp1 .)
    RBRACKET        reduce using rule 91 (mexp -> termino mexp1 .)
    COMMA           reduce using rule 91 (mexp -> termino mexp1 .)
    RPAREN          reduce using rule 91 (mexp -> termino mexp1 .)
    SEMICOLON       reduce using rule 91 (mexp -> termino mexp1 .)


state 116

    (92) mexp1 -> mexp2 . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    termino                        shift and go to state 147
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 117

    (93) mexp1 -> empty .

    LESS            reduce using rule 93 (mexp1 -> empty .)
    LESSO           reduce using rule 93 (mexp1 -> empty .)
    GREATER         reduce using rule 93 (mexp1 -> empty .)
    GREATERO        reduce using rule 93 (mexp1 -> empty .)
    NOTEQUAL        reduce using rule 93 (mexp1 -> empty .)
    EQUALS          reduce using rule 93 (mexp1 -> empty .)
    AND             reduce using rule 93 (mexp1 -> empty .)
    OR              reduce using rule 93 (mexp1 -> empty .)
    RBRACKET        reduce using rule 93 (mexp1 -> empty .)
    COMMA           reduce using rule 93 (mexp1 -> empty .)
    RPAREN          reduce using rule 93 (mexp1 -> empty .)
    SEMICOLON       reduce using rule 93 (mexp1 -> empty .)


state 118

    (94) mexp2 -> PLUS .

    LPAREN          reduce using rule 94 (mexp2 -> PLUS .)
    CTEI            reduce using rule 94 (mexp2 -> PLUS .)
    CTEF            reduce using rule 94 (mexp2 -> PLUS .)
    CTEC            reduce using rule 94 (mexp2 -> PLUS .)
    ID              reduce using rule 94 (mexp2 -> PLUS .)


state 119

    (95) mexp2 -> MINUS .

    LPAREN          reduce using rule 95 (mexp2 -> MINUS .)
    CTEI            reduce using rule 95 (mexp2 -> MINUS .)
    CTEF            reduce using rule 95 (mexp2 -> MINUS .)
    CTEC            reduce using rule 95 (mexp2 -> MINUS .)
    ID              reduce using rule 95 (mexp2 -> MINUS .)


state 120

    (96) termino -> factor termino1 .

    PLUS            reduce using rule 96 (termino -> factor termino1 .)
    MINUS           reduce using rule 96 (termino -> factor termino1 .)
    LESS            reduce using rule 96 (termino -> factor termino1 .)
    LESSO           reduce using rule 96 (termino -> factor termino1 .)
    GREATER         reduce using rule 96 (termino -> factor termino1 .)
    GREATERO        reduce using rule 96 (termino -> factor termino1 .)
    NOTEQUAL        reduce using rule 96 (termino -> factor termino1 .)
    EQUALS          reduce using rule 96 (termino -> factor termino1 .)
    AND             reduce using rule 96 (termino -> factor termino1 .)
    OR              reduce using rule 96 (termino -> factor termino1 .)
    RBRACKET        reduce using rule 96 (termino -> factor termino1 .)
    COMMA           reduce using rule 96 (termino -> factor termino1 .)
    RPAREN          reduce using rule 96 (termino -> factor termino1 .)
    SEMICOLON       reduce using rule 96 (termino -> factor termino1 .)


state 121

    (97) termino1 -> TIMES . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    factor                         shift and go to state 148
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 122

    (98) termino1 -> DIVIDE . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    factor                         shift and go to state 149
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 123

    (99) termino1 -> empty .

    PLUS            reduce using rule 99 (termino1 -> empty .)
    MINUS           reduce using rule 99 (termino1 -> empty .)
    LESS            reduce using rule 99 (termino1 -> empty .)
    LESSO           reduce using rule 99 (termino1 -> empty .)
    GREATER         reduce using rule 99 (termino1 -> empty .)
    GREATERO        reduce using rule 99 (termino1 -> empty .)
    NOTEQUAL        reduce using rule 99 (termino1 -> empty .)
    EQUALS          reduce using rule 99 (termino1 -> empty .)
    AND             reduce using rule 99 (termino1 -> empty .)
    OR              reduce using rule 99 (termino1 -> empty .)
    RBRACKET        reduce using rule 99 (termino1 -> empty .)
    COMMA           reduce using rule 99 (termino1 -> empty .)
    RPAREN          reduce using rule 99 (termino1 -> empty .)
    SEMICOLON       reduce using rule 99 (termino1 -> empty .)


state 124

    (100) factor -> LPAREN exp . RPAREN

    RPAREN          shift and go to state 150


state 125

    (42) main -> printfuncs PRINCIPAL LPAREN RPAREN . fillFirst bloque mergetables
    (43) fillFirst -> . empty
    (1) empty -> .

    LCURLY          reduce using rule 1 (empty -> .)

    fillFirst                      shift and go to state 151
    empty                          shift and go to state 152

state 126

    (38) asig -> variable addVar EQUAL . addAsig exp genAsig SEMICOLON
    (40) addAsig -> .

    LPAREN          reduce using rule 40 (addAsig -> .)
    CTEI            reduce using rule 40 (addAsig -> .)
    CTEF            reduce using rule 40 (addAsig -> .)
    CTEC            reduce using rule 40 (addAsig -> .)
    ID              reduce using rule 40 (addAsig -> .)

    addAsig                        shift and go to state 153

state 127

    (61) cond -> SI LPAREN exp . RPAREN cond1 ENTONCES bloque elsePart cond2

    RPAREN          shift and go to state 154


state 128

    (47) retorno -> REGRESA LPAREN exp . RPAREN SEMICOLON

    RPAREN          shift and go to state 155


state 129

    (54) lectura -> LEE LPAREN variable . RPAREN SEMICOLON

    RPAREN          shift and go to state 156


state 130

    (104) variable -> ID .

    RPAREN          reduce using rule 104 (variable -> ID .)


state 131

    (55) escritura -> ESCRIBE LPAREN escritura2 . RPAREN SEMICOLON

    RPAREN          shift and go to state 157


state 132

    (58) escritura2 -> escritura1 . addescritura COMMA escritura2
    (59) escritura2 -> escritura1 . addescritura
    (60) addescritura -> .

    COMMA           reduce using rule 60 (addescritura -> .)
    RPAREN          reduce using rule 60 (addescritura -> .)

    addescritura                   shift and go to state 158

state 133

    (56) escritura1 -> CTES .

    COMMA           reduce using rule 56 (escritura1 -> CTES .)
    RPAREN          reduce using rule 56 (escritura1 -> CTES .)


state 134

    (57) escritura1 -> exp .

    COMMA           reduce using rule 57 (escritura1 -> exp .)
    RPAREN          reduce using rule 57 (escritura1 -> exp .)


state 135

    (48) llamada -> iniciaLlamada llamada2 endLlamada . RPAREN

    RPAREN          shift and go to state 159


state 136

    (49) llamada -> iniciaLlamada endLlamada RPAREN .

    SEMICOLON       reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    TIMES           reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    DIVIDE          reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    PLUS            reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    MINUS           reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    LESS            reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    LESSO           reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    GREATER         reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    GREATERO        reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    NOTEQUAL        reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    EQUALS          reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    AND             reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    OR              reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    RBRACKET        reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    COMMA           reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)
    RPAREN          reduce using rule 49 (llamada -> iniciaLlamada endLlamada RPAREN .)


state 137

    (51) llamada2 -> exp COMMA . llamada2
    (51) llamada2 -> . exp COMMA llamada2
    (52) llamada2 -> . exp
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    exp                            shift and go to state 91
    llamada2                       shift and go to state 160
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 138

    (69) condicional -> MIENTRAS regWhile LPAREN . exp RPAREN whileCond HAZ bloque endWhile
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    exp                            shift and go to state 161
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 139

    (73) nocondicional -> DESDE ID EQUAL . CTEI HASTA CTEI createFor HACER bloque endFor

    CTEI            shift and go to state 162


state 140

    (19) func_decl -> FUNCION func2 func3 LPAREN params . RPAREN vars
    (21) func_decl -> FUNCION func2 func3 LPAREN params . RPAREN
    (45) params -> params . COMMA param_decl

    RPAREN          shift and go to state 163
    COMMA           shift and go to state 164


state 141

    (20) func_decl -> FUNCION func2 func3 LPAREN RPAREN . vars
    (22) func_decl -> FUNCION func2 func3 LPAREN RPAREN .
    (5) vars -> . VAR var2

    LCURLY          reduce using rule 22 (func_decl -> FUNCION func2 func3 LPAREN RPAREN .)
    VAR             shift and go to state 8

    vars                           shift and go to state 165

state 142

    (46) params -> param_decl .

    RPAREN          reduce using rule 46 (params -> param_decl .)
    COMMA           reduce using rule 46 (params -> param_decl .)


state 143

    (44) param_decl -> tipo . ID

    ID              shift and go to state 166


state 144

    (77) exp1 -> OR texp . exp1
    (77) exp1 -> . OR texp exp1
    (78) exp1 -> . empty
    (1) empty -> .

    OR              shift and go to state 101
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    exp1                           shift and go to state 167
    empty                          shift and go to state 102

state 145

    (80) texp1 -> AND gexp . texp1
    (80) texp1 -> . AND gexp texp1
    (81) texp1 -> . empty
    (1) empty -> .

    AND             shift and go to state 104
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    texp1                          shift and go to state 168
    empty                          shift and go to state 105

state 146

    (83) gexp1 -> gexp2 mexp . gexp1
    (83) gexp1 -> . gexp2 mexp gexp1
    (84) gexp1 -> . empty
    (85) gexp2 -> . LESS
    (86) gexp2 -> . LESSO
    (87) gexp2 -> . GREATER
    (88) gexp2 -> . GREATERO
    (89) gexp2 -> . NOTEQUAL
    (90) gexp2 -> . EQUALS
    (1) empty -> .

    LESS            shift and go to state 109
    LESSO           shift and go to state 110
    GREATER         shift and go to state 111
    GREATERO        shift and go to state 112
    NOTEQUAL        shift and go to state 113
    EQUALS          shift and go to state 114
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    gexp2                          shift and go to state 107
    gexp1                          shift and go to state 169
    empty                          shift and go to state 108

state 147

    (92) mexp1 -> mexp2 termino . mexp1
    (92) mexp1 -> . mexp2 termino mexp1
    (93) mexp1 -> . empty
    (94) mexp2 -> . PLUS
    (95) mexp2 -> . MINUS
    (1) empty -> .

    PLUS            shift and go to state 118
    MINUS           shift and go to state 119
    LESS            reduce using rule 1 (empty -> .)
    LESSO           reduce using rule 1 (empty -> .)
    GREATER         reduce using rule 1 (empty -> .)
    GREATERO        reduce using rule 1 (empty -> .)
    NOTEQUAL        reduce using rule 1 (empty -> .)
    EQUALS          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    mexp2                          shift and go to state 116
    mexp1                          shift and go to state 170
    empty                          shift and go to state 117

state 148

    (97) termino1 -> TIMES factor . termino1
    (97) termino1 -> . TIMES factor termino1
    (98) termino1 -> . DIVIDE factor termino1
    (99) termino1 -> . empty
    (1) empty -> .

    TIMES           shift and go to state 121
    DIVIDE          shift and go to state 122
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESS            reduce using rule 1 (empty -> .)
    LESSO           reduce using rule 1 (empty -> .)
    GREATER         reduce using rule 1 (empty -> .)
    GREATERO        reduce using rule 1 (empty -> .)
    NOTEQUAL        reduce using rule 1 (empty -> .)
    EQUALS          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    termino1                       shift and go to state 171
    empty                          shift and go to state 123

state 149

    (98) termino1 -> DIVIDE factor . termino1
    (97) termino1 -> . TIMES factor termino1
    (98) termino1 -> . DIVIDE factor termino1
    (99) termino1 -> . empty
    (1) empty -> .

    TIMES           shift and go to state 121
    DIVIDE          shift and go to state 122
    PLUS            reduce using rule 1 (empty -> .)
    MINUS           reduce using rule 1 (empty -> .)
    LESS            reduce using rule 1 (empty -> .)
    LESSO           reduce using rule 1 (empty -> .)
    GREATER         reduce using rule 1 (empty -> .)
    GREATERO        reduce using rule 1 (empty -> .)
    NOTEQUAL        reduce using rule 1 (empty -> .)
    EQUALS          reduce using rule 1 (empty -> .)
    AND             reduce using rule 1 (empty -> .)
    OR              reduce using rule 1 (empty -> .)
    RBRACKET        reduce using rule 1 (empty -> .)
    COMMA           reduce using rule 1 (empty -> .)
    RPAREN          reduce using rule 1 (empty -> .)
    SEMICOLON       reduce using rule 1 (empty -> .)

    termino1                       shift and go to state 172
    empty                          shift and go to state 123

state 150

    (100) factor -> LPAREN exp RPAREN .

    TIMES           reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    DIVIDE          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    PLUS            reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    MINUS           reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    LESS            reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    LESSO           reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    GREATER         reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    GREATERO        reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    NOTEQUAL        reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    EQUALS          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    AND             reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    OR              reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    RBRACKET        reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    COMMA           reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    RPAREN          reduce using rule 100 (factor -> LPAREN exp RPAREN .)
    SEMICOLON       reduce using rule 100 (factor -> LPAREN exp RPAREN .)


state 151

    (42) main -> printfuncs PRINCIPAL LPAREN RPAREN fillFirst . bloque mergetables
    (28) bloque -> . LCURLY bloque1 RCURLY

    LCURLY          shift and go to state 30

    bloque                         shift and go to state 173

state 152

    (43) fillFirst -> empty .

    LCURLY          reduce using rule 43 (fillFirst -> empty .)


state 153

    (38) asig -> variable addVar EQUAL addAsig . exp genAsig SEMICOLON
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    variable                       shift and go to state 76
    exp                            shift and go to state 174
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 154

    (61) cond -> SI LPAREN exp RPAREN . cond1 ENTONCES bloque elsePart cond2
    (62) cond1 -> . empty
    (1) empty -> .

    ENTONCES        reduce using rule 1 (empty -> .)

    cond1                          shift and go to state 175
    empty                          shift and go to state 176

state 155

    (47) retorno -> REGRESA LPAREN exp RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 177


state 156

    (54) lectura -> LEE LPAREN variable RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 178


state 157

    (55) escritura -> ESCRIBE LPAREN escritura2 RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 179


state 158

    (58) escritura2 -> escritura1 addescritura . COMMA escritura2
    (59) escritura2 -> escritura1 addescritura .

    COMMA           shift and go to state 180
    RPAREN          reduce using rule 59 (escritura2 -> escritura1 addescritura .)


state 159

    (48) llamada -> iniciaLlamada llamada2 endLlamada RPAREN .

    SEMICOLON       reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    TIMES           reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    DIVIDE          reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    PLUS            reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    MINUS           reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    LESS            reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    LESSO           reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    GREATER         reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    GREATERO        reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    NOTEQUAL        reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    EQUALS          reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    AND             reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    OR              reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    RBRACKET        reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    COMMA           reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)
    RPAREN          reduce using rule 48 (llamada -> iniciaLlamada llamada2 endLlamada RPAREN .)


state 160

    (51) llamada2 -> exp COMMA llamada2 .

    RPAREN          reduce using rule 51 (llamada2 -> exp COMMA llamada2 .)


state 161

    (69) condicional -> MIENTRAS regWhile LPAREN exp . RPAREN whileCond HAZ bloque endWhile

    RPAREN          shift and go to state 181


state 162

    (73) nocondicional -> DESDE ID EQUAL CTEI . HASTA CTEI createFor HACER bloque endFor

    HASTA           shift and go to state 182


state 163

    (19) func_decl -> FUNCION func2 func3 LPAREN params RPAREN . vars
    (21) func_decl -> FUNCION func2 func3 LPAREN params RPAREN .
    (5) vars -> . VAR var2

    LCURLY          reduce using rule 21 (func_decl -> FUNCION func2 func3 LPAREN params RPAREN .)
    VAR             shift and go to state 8

    vars                           shift and go to state 183

state 164

    (45) params -> params COMMA . param_decl
    (44) param_decl -> . tipo ID
    (14) tipo -> . INT
    (15) tipo -> . FLOAT
    (16) tipo -> . CHAR

    INT             shift and go to state 14
    FLOAT           shift and go to state 15
    CHAR            shift and go to state 16

    param_decl                     shift and go to state 184
    tipo                           shift and go to state 143

state 165

    (20) func_decl -> FUNCION func2 func3 LPAREN RPAREN vars .

    LCURLY          reduce using rule 20 (func_decl -> FUNCION func2 func3 LPAREN RPAREN vars .)


state 166

    (44) param_decl -> tipo ID .

    RPAREN          reduce using rule 44 (param_decl -> tipo ID .)
    COMMA           reduce using rule 44 (param_decl -> tipo ID .)


state 167

    (77) exp1 -> OR texp exp1 .

    RBRACKET        reduce using rule 77 (exp1 -> OR texp exp1 .)
    COMMA           reduce using rule 77 (exp1 -> OR texp exp1 .)
    RPAREN          reduce using rule 77 (exp1 -> OR texp exp1 .)
    SEMICOLON       reduce using rule 77 (exp1 -> OR texp exp1 .)


state 168

    (80) texp1 -> AND gexp texp1 .

    OR              reduce using rule 80 (texp1 -> AND gexp texp1 .)
    RBRACKET        reduce using rule 80 (texp1 -> AND gexp texp1 .)
    COMMA           reduce using rule 80 (texp1 -> AND gexp texp1 .)
    RPAREN          reduce using rule 80 (texp1 -> AND gexp texp1 .)
    SEMICOLON       reduce using rule 80 (texp1 -> AND gexp texp1 .)


state 169

    (83) gexp1 -> gexp2 mexp gexp1 .

    AND             reduce using rule 83 (gexp1 -> gexp2 mexp gexp1 .)
    OR              reduce using rule 83 (gexp1 -> gexp2 mexp gexp1 .)
    RBRACKET        reduce using rule 83 (gexp1 -> gexp2 mexp gexp1 .)
    COMMA           reduce using rule 83 (gexp1 -> gexp2 mexp gexp1 .)
    RPAREN          reduce using rule 83 (gexp1 -> gexp2 mexp gexp1 .)
    SEMICOLON       reduce using rule 83 (gexp1 -> gexp2 mexp gexp1 .)


state 170

    (92) mexp1 -> mexp2 termino mexp1 .

    LESS            reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    LESSO           reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    GREATER         reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    GREATERO        reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    NOTEQUAL        reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    EQUALS          reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    AND             reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    OR              reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    RBRACKET        reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    COMMA           reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    RPAREN          reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)
    SEMICOLON       reduce using rule 92 (mexp1 -> mexp2 termino mexp1 .)


state 171

    (97) termino1 -> TIMES factor termino1 .

    PLUS            reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    MINUS           reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    LESS            reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    LESSO           reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    GREATER         reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    GREATERO        reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    NOTEQUAL        reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    EQUALS          reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    AND             reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    OR              reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    RBRACKET        reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    COMMA           reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    RPAREN          reduce using rule 97 (termino1 -> TIMES factor termino1 .)
    SEMICOLON       reduce using rule 97 (termino1 -> TIMES factor termino1 .)


state 172

    (98) termino1 -> DIVIDE factor termino1 .

    PLUS            reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    MINUS           reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    LESS            reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    LESSO           reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    GREATER         reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    GREATERO        reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    NOTEQUAL        reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    EQUALS          reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    AND             reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    OR              reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    RBRACKET        reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    COMMA           reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    RPAREN          reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)
    SEMICOLON       reduce using rule 98 (termino1 -> DIVIDE factor termino1 .)


state 173

    (42) main -> printfuncs PRINCIPAL LPAREN RPAREN fillFirst bloque . mergetables
    (108) mergetables -> . empty
    (1) empty -> .

    $end            reduce using rule 1 (empty -> .)

    mergetables                    shift and go to state 185
    empty                          shift and go to state 186

state 174

    (38) asig -> variable addVar EQUAL addAsig exp . genAsig SEMICOLON
    (41) genAsig -> .

    SEMICOLON       reduce using rule 41 (genAsig -> .)

    genAsig                        shift and go to state 187

state 175

    (61) cond -> SI LPAREN exp RPAREN cond1 . ENTONCES bloque elsePart cond2

    ENTONCES        shift and go to state 188


state 176

    (62) cond1 -> empty .

    ENTONCES        reduce using rule 62 (cond1 -> empty .)


state 177

    (47) retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .

    SI              reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)
    REGRESA         reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)
    LEE             reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)
    ID              reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)
    DESDE           reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)
    RCURLY          reduce using rule 47 (retorno -> REGRESA LPAREN exp RPAREN SEMICOLON .)


state 178

    (54) lectura -> LEE LPAREN variable RPAREN SEMICOLON .

    SI              reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)
    REGRESA         reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)
    LEE             reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)
    ID              reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)
    DESDE           reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)
    RCURLY          reduce using rule 54 (lectura -> LEE LPAREN variable RPAREN SEMICOLON .)


state 179

    (55) escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .

    SI              reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)
    REGRESA         reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)
    LEE             reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)
    ESCRIBE         reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)
    ID              reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)
    MIENTRAS        reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)
    DESDE           reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)
    RCURLY          reduce using rule 55 (escritura -> ESCRIBE LPAREN escritura2 RPAREN SEMICOLON .)


state 180

    (58) escritura2 -> escritura1 addescritura COMMA . escritura2
    (58) escritura2 -> . escritura1 addescritura COMMA escritura2
    (59) escritura2 -> . escritura1 addescritura
    (56) escritura1 -> . CTES
    (57) escritura1 -> . exp
    (76) exp -> . texp exp1
    (79) texp -> . gexp texp1
    (82) gexp -> . mexp gexp1
    (91) mexp -> . termino mexp1
    (96) termino -> . factor termino1
    (100) factor -> . LPAREN exp RPAREN
    (101) factor -> . varcte
    (102) factor -> . variable
    (103) factor -> . llamada
    (105) varcte -> . CTEI
    (106) varcte -> . CTEF
    (107) varcte -> . CTEC
    (104) variable -> . ID
    (48) llamada -> . iniciaLlamada llamada2 endLlamada RPAREN
    (49) llamada -> . iniciaLlamada endLlamada RPAREN
    (50) iniciaLlamada -> . ID LPAREN

    CTES            shift and go to state 133
    LPAREN          shift and go to state 74
    CTEI            shift and go to state 92
    CTEF            shift and go to state 78
    CTEC            shift and go to state 79
    ID              shift and go to state 61

    escritura1                     shift and go to state 132
    escritura2                     shift and go to state 189
    exp                            shift and go to state 134
    texp                           shift and go to state 69
    gexp                           shift and go to state 70
    mexp                           shift and go to state 71
    termino                        shift and go to state 72
    factor                         shift and go to state 73
    varcte                         shift and go to state 75
    variable                       shift and go to state 76
    llamada                        shift and go to state 77
    iniciaLlamada                  shift and go to state 58

state 181

    (69) condicional -> MIENTRAS regWhile LPAREN exp RPAREN . whileCond HAZ bloque endWhile
    (71) whileCond -> . empty
    (1) empty -> .

    HAZ             reduce using rule 1 (empty -> .)

    whileCond                      shift and go to state 190
    empty                          shift and go to state 191

state 182

    (73) nocondicional -> DESDE ID EQUAL CTEI HASTA . CTEI createFor HACER bloque endFor

    CTEI            shift and go to state 192


state 183

    (19) func_decl -> FUNCION func2 func3 LPAREN params RPAREN vars .

    LCURLY          reduce using rule 19 (func_decl -> FUNCION func2 func3 LPAREN params RPAREN vars .)


state 184

    (45) params -> params COMMA param_decl .

    RPAREN          reduce using rule 45 (params -> params COMMA param_decl .)
    COMMA           reduce using rule 45 (params -> params COMMA param_decl .)


state 185

    (42) main -> printfuncs PRINCIPAL LPAREN RPAREN fillFirst bloque mergetables .

    $end            reduce using rule 42 (main -> printfuncs PRINCIPAL LPAREN RPAREN fillFirst bloque mergetables .)


state 186

    (108) mergetables -> empty .

    $end            reduce using rule 108 (mergetables -> empty .)


state 187

    (38) asig -> variable addVar EQUAL addAsig exp genAsig . SEMICOLON

    SEMICOLON       shift and go to state 193


state 188

    (61) cond -> SI LPAREN exp RPAREN cond1 ENTONCES . bloque elsePart cond2
    (28) bloque -> . LCURLY bloque1 RCURLY

    LCURLY          shift and go to state 30

    bloque                         shift and go to state 194

state 189

    (58) escritura2 -> escritura1 addescritura COMMA escritura2 .

    RPAREN          reduce using rule 58 (escritura2 -> escritura1 addescritura COMMA escritura2 .)


state 190

    (69) condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond . HAZ bloque endWhile

    HAZ             shift and go to state 195


state 191

    (71) whileCond -> empty .

    HAZ             reduce using rule 71 (whileCond -> empty .)


state 192

    (73) nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI . createFor HACER bloque endFor
    (74) createFor -> .

    HACER           reduce using rule 74 (createFor -> .)

    createFor                      shift and go to state 196

state 193

    (38) asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .

    SI              reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)
    REGRESA         reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)
    LEE             reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)
    ESCRIBE         reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)
    ID              reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)
    MIENTRAS        reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)
    DESDE           reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)
    RCURLY          reduce using rule 38 (asig -> variable addVar EQUAL addAsig exp genAsig SEMICOLON .)


state 194

    (61) cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque . elsePart cond2
    (64) elsePart -> . SINO elseActions bloque
    (65) elsePart -> . empty
    (1) empty -> .

    SINO            shift and go to state 198
    SI              reduce using rule 1 (empty -> .)
    REGRESA         reduce using rule 1 (empty -> .)
    LEE             reduce using rule 1 (empty -> .)
    ESCRIBE         reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    MIENTRAS        reduce using rule 1 (empty -> .)
    DESDE           reduce using rule 1 (empty -> .)
    RCURLY          reduce using rule 1 (empty -> .)

    elsePart                       shift and go to state 197
    empty                          shift and go to state 199

state 195

    (69) condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ . bloque endWhile
    (28) bloque -> . LCURLY bloque1 RCURLY

    LCURLY          shift and go to state 30

    bloque                         shift and go to state 200

state 196

    (73) nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor . HACER bloque endFor

    HACER           shift and go to state 201


state 197

    (61) cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart . cond2
    (63) cond2 -> . empty
    (1) empty -> .

    SI              reduce using rule 1 (empty -> .)
    REGRESA         reduce using rule 1 (empty -> .)
    LEE             reduce using rule 1 (empty -> .)
    ESCRIBE         reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    MIENTRAS        reduce using rule 1 (empty -> .)
    DESDE           reduce using rule 1 (empty -> .)
    RCURLY          reduce using rule 1 (empty -> .)

    cond2                          shift and go to state 202
    empty                          shift and go to state 203

state 198

    (64) elsePart -> SINO . elseActions bloque
    (66) elseActions -> . empty
    (1) empty -> .

    LCURLY          reduce using rule 1 (empty -> .)

    elseActions                    shift and go to state 204
    empty                          shift and go to state 205

state 199

    (65) elsePart -> empty .

    SI              reduce using rule 65 (elsePart -> empty .)
    REGRESA         reduce using rule 65 (elsePart -> empty .)
    LEE             reduce using rule 65 (elsePart -> empty .)
    ESCRIBE         reduce using rule 65 (elsePart -> empty .)
    ID              reduce using rule 65 (elsePart -> empty .)
    MIENTRAS        reduce using rule 65 (elsePart -> empty .)
    DESDE           reduce using rule 65 (elsePart -> empty .)
    RCURLY          reduce using rule 65 (elsePart -> empty .)


state 200

    (69) condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque . endWhile
    (72) endWhile -> . empty
    (1) empty -> .

    SI              reduce using rule 1 (empty -> .)
    REGRESA         reduce using rule 1 (empty -> .)
    LEE             reduce using rule 1 (empty -> .)
    ESCRIBE         reduce using rule 1 (empty -> .)
    ID              reduce using rule 1 (empty -> .)
    MIENTRAS        reduce using rule 1 (empty -> .)
    DESDE           reduce using rule 1 (empty -> .)
    RCURLY          reduce using rule 1 (empty -> .)

    endWhile                       shift and go to state 206
    empty                          shift and go to state 207

state 201

    (73) nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER . bloque endFor
    (28) bloque -> . LCURLY bloque1 RCURLY

    LCURLY          shift and go to state 30

    bloque                         shift and go to state 208

state 202

    (61) cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .

    SI              reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)
    REGRESA         reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)
    LEE             reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)
    ESCRIBE         reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)
    ID              reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)
    MIENTRAS        reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)
    DESDE           reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)
    RCURLY          reduce using rule 61 (cond -> SI LPAREN exp RPAREN cond1 ENTONCES bloque elsePart cond2 .)


state 203

    (63) cond2 -> empty .

    SI              reduce using rule 63 (cond2 -> empty .)
    REGRESA         reduce using rule 63 (cond2 -> empty .)
    LEE             reduce using rule 63 (cond2 -> empty .)
    ESCRIBE         reduce using rule 63 (cond2 -> empty .)
    ID              reduce using rule 63 (cond2 -> empty .)
    MIENTRAS        reduce using rule 63 (cond2 -> empty .)
    DESDE           reduce using rule 63 (cond2 -> empty .)
    RCURLY          reduce using rule 63 (cond2 -> empty .)


state 204

    (64) elsePart -> SINO elseActions . bloque
    (28) bloque -> . LCURLY bloque1 RCURLY

    LCURLY          shift and go to state 30

    bloque                         shift and go to state 209

state 205

    (66) elseActions -> empty .

    LCURLY          reduce using rule 66 (elseActions -> empty .)


state 206

    (69) condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .

    SI              reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)
    REGRESA         reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)
    LEE             reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)
    ESCRIBE         reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)
    ID              reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)
    MIENTRAS        reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)
    DESDE           reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)
    RCURLY          reduce using rule 69 (condicional -> MIENTRAS regWhile LPAREN exp RPAREN whileCond HAZ bloque endWhile .)


state 207

    (72) endWhile -> empty .

    SI              reduce using rule 72 (endWhile -> empty .)
    REGRESA         reduce using rule 72 (endWhile -> empty .)
    LEE             reduce using rule 72 (endWhile -> empty .)
    ESCRIBE         reduce using rule 72 (endWhile -> empty .)
    ID              reduce using rule 72 (endWhile -> empty .)
    MIENTRAS        reduce using rule 72 (endWhile -> empty .)
    DESDE           reduce using rule 72 (endWhile -> empty .)
    RCURLY          reduce using rule 72 (endWhile -> empty .)


state 208

    (73) nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque . endFor
    (75) endFor -> .

    SI              reduce using rule 75 (endFor -> .)
    REGRESA         reduce using rule 75 (endFor -> .)
    LEE             reduce using rule 75 (endFor -> .)
    ESCRIBE         reduce using rule 75 (endFor -> .)
    ID              reduce using rule 75 (endFor -> .)
    MIENTRAS        reduce using rule 75 (endFor -> .)
    DESDE           reduce using rule 75 (endFor -> .)
    RCURLY          reduce using rule 75 (endFor -> .)

    endFor                         shift and go to state 210

state 209

    (64) elsePart -> SINO elseActions bloque .

    SI              reduce using rule 64 (elsePart -> SINO elseActions bloque .)
    REGRESA         reduce using rule 64 (elsePart -> SINO elseActions bloque .)
    LEE             reduce using rule 64 (elsePart -> SINO elseActions bloque .)
    ESCRIBE         reduce using rule 64 (elsePart -> SINO elseActions bloque .)
    ID              reduce using rule 64 (elsePart -> SINO elseActions bloque .)
    MIENTRAS        reduce using rule 64 (elsePart -> SINO elseActions bloque .)
    DESDE           reduce using rule 64 (elsePart -> SINO elseActions bloque .)
    RCURLY          reduce using rule 64 (elsePart -> SINO elseActions bloque .)


state 210

    (73) nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .

    SI              reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)
    REGRESA         reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)
    LEE             reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)
    ESCRIBE         reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)
    ID              reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)
    MIENTRAS        reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)
    DESDE           reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)
    RCURLY          reduce using rule 73 (nocondicional -> DESDE ID EQUAL CTEI HASTA CTEI createFor HACER bloque endFor .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for RBRACKET in state 67 resolved as shift
